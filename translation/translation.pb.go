// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: api/common/translation.proto

package translation

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Translation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Aa            *string                `protobuf:"bytes,1,opt,name=aa,proto3,oneof" json:"aa,omitempty"`
	Ti            *string                `protobuf:"bytes,2,opt,name=ti,proto3,oneof" json:"ti,omitempty"`
	Ar            *string                `protobuf:"bytes,3,opt,name=ar,proto3,oneof" json:"ar,omitempty"`
	En            *string                `protobuf:"bytes,4,opt,name=en,proto3,oneof" json:"en,omitempty"`
	Af            *string                `protobuf:"bytes,5,opt,name=af,proto3,oneof" json:"af,omitempty"`
	Nr            *string                `protobuf:"bytes,6,opt,name=nr,proto3,oneof" json:"nr,omitempty"`
	St            *string                `protobuf:"bytes,7,opt,name=st,proto3,oneof" json:"st,omitempty"`
	Ss            *string                `protobuf:"bytes,8,opt,name=ss,proto3,oneof" json:"ss,omitempty"`
	Tn            *string                `protobuf:"bytes,9,opt,name=tn,proto3,oneof" json:"tn,omitempty"`
	Ts            *string                `protobuf:"bytes,10,opt,name=ts,proto3,oneof" json:"ts,omitempty"`
	Ve            *string                `protobuf:"bytes,11,opt,name=ve,proto3,oneof" json:"ve,omitempty"`
	Xh            *string                `protobuf:"bytes,12,opt,name=xh,proto3,oneof" json:"xh,omitempty"`
	Zu            *string                `protobuf:"bytes,13,opt,name=zu,proto3,oneof" json:"zu,omitempty"`
	Am            *string                `protobuf:"bytes,14,opt,name=am,proto3,oneof" json:"am,omitempty"`
	Fr            *string                `protobuf:"bytes,15,opt,name=fr,proto3,oneof" json:"fr,omitempty"`
	Ku            *string                `protobuf:"bytes,16,opt,name=ku,proto3,oneof" json:"ku,omitempty"`
	He            *string                `protobuf:"bytes,17,opt,name=he,proto3,oneof" json:"he,omitempty"`
	So            *string                `protobuf:"bytes,18,opt,name=so,proto3,oneof" json:"so,omitempty"`
	Ay            *string                `protobuf:"bytes,19,opt,name=ay,proto3,oneof" json:"ay,omitempty"`
	Es            *string                `protobuf:"bytes,20,opt,name=es,proto3,oneof" json:"es,omitempty"`
	Qu            *string                `protobuf:"bytes,21,opt,name=qu,proto3,oneof" json:"qu,omitempty"`
	Az            *string                `protobuf:"bytes,22,opt,name=az,proto3,oneof" json:"az,omitempty"`
	Be            *string                `protobuf:"bytes,23,opt,name=be,proto3,oneof" json:"be,omitempty"`
	Ru            *string                `protobuf:"bytes,24,opt,name=ru,proto3,oneof" json:"ru,omitempty"`
	Bn            *string                `protobuf:"bytes,25,opt,name=bn,proto3,oneof" json:"bn,omitempty"`
	Bi            *string                `protobuf:"bytes,26,opt,name=bi,proto3,oneof" json:"bi,omitempty"`
	Bs            *string                `protobuf:"bytes,27,opt,name=bs,proto3,oneof" json:"bs,omitempty"`
	Hr            *string                `protobuf:"bytes,28,opt,name=hr,proto3,oneof" json:"hr,omitempty"`
	Sr            *string                `protobuf:"bytes,29,opt,name=sr,proto3,oneof" json:"sr,omitempty"`
	Sq            *string                `protobuf:"bytes,30,opt,name=sq,proto3,oneof" json:"sq,omitempty"`
	Bg            *string                `protobuf:"bytes,31,opt,name=bg,proto3,oneof" json:"bg,omitempty"`
	Ca            *string                `protobuf:"bytes,32,opt,name=ca,proto3,oneof" json:"ca,omitempty"`
	Cs            *string                `protobuf:"bytes,33,opt,name=cs,proto3,oneof" json:"cs,omitempty"`
	Sk            *string                `protobuf:"bytes,34,opt,name=sk,proto3,oneof" json:"sk,omitempty"`
	Ch            *string                `protobuf:"bytes,35,opt,name=ch,proto3,oneof" json:"ch,omitempty"`
	Da            *string                `protobuf:"bytes,36,opt,name=da,proto3,oneof" json:"da,omitempty"`
	De            *string                `protobuf:"bytes,37,opt,name=de,proto3,oneof" json:"de,omitempty"`
	Nl            *string                `protobuf:"bytes,38,opt,name=nl,proto3,oneof" json:"nl,omitempty"`
	Lb            *string                `protobuf:"bytes,39,opt,name=lb,proto3,oneof" json:"lb,omitempty"`
	It            *string                `protobuf:"bytes,40,opt,name=it,proto3,oneof" json:"it,omitempty"`
	Rm            *string                `protobuf:"bytes,41,opt,name=rm,proto3,oneof" json:"rm,omitempty"`
	La            *string                `protobuf:"bytes,42,opt,name=la,proto3,oneof" json:"la,omitempty"`
	Dv            *string                `protobuf:"bytes,43,opt,name=dv,proto3,oneof" json:"dv,omitempty"`
	Dz            *string                `protobuf:"bytes,44,opt,name=dz,proto3,oneof" json:"dz,omitempty"`
	El            *string                `protobuf:"bytes,45,opt,name=el,proto3,oneof" json:"el,omitempty"`
	Tr            *string                `protobuf:"bytes,46,opt,name=tr,proto3,oneof" json:"tr,omitempty"`
	Hy            *string                `protobuf:"bytes,47,opt,name=hy,proto3,oneof" json:"hy,omitempty"`
	Sm            *string                `protobuf:"bytes,48,opt,name=sm,proto3,oneof" json:"sm,omitempty"`
	Pa            *string                `protobuf:"bytes,49,opt,name=pa,proto3,oneof" json:"pa,omitempty"`
	Fj            *string                `protobuf:"bytes,50,opt,name=fj,proto3,oneof" json:"fj,omitempty"`
	Zh            *string                `protobuf:"bytes,51,opt,name=zh,proto3,oneof" json:"zh,omitempty"`
	Hi            *string                `protobuf:"bytes,52,opt,name=hi,proto3,oneof" json:"hi,omitempty"`
	Gv            *string                `protobuf:"bytes,53,opt,name=gv,proto3,oneof" json:"gv,omitempty"`
	Ga            *string                `protobuf:"bytes,54,opt,name=ga,proto3,oneof" json:"ga,omitempty"`
	Sw            *string                `protobuf:"bytes,55,opt,name=sw,proto3,oneof" json:"sw,omitempty"`
	Ny            *string                `protobuf:"bytes,56,opt,name=ny,proto3,oneof" json:"ny,omitempty"`
	Mt            *string                `protobuf:"bytes,57,opt,name=mt,proto3,oneof" json:"mt,omitempty"`
	Mh            *string                `protobuf:"bytes,58,opt,name=mh,proto3,oneof" json:"mh,omitempty"`
	Na            *string                `protobuf:"bytes,59,opt,name=na,proto3,oneof" json:"na,omitempty"`
	Mi            *string                `protobuf:"bytes,60,opt,name=mi,proto3,oneof" json:"mi,omitempty"`
	Ur            *string                `protobuf:"bytes,61,opt,name=ur,proto3,oneof" json:"ur,omitempty"`
	Rw            *string                `protobuf:"bytes,62,opt,name=rw,proto3,oneof" json:"rw,omitempty"`
	Sn            *string                `protobuf:"bytes,63,opt,name=sn,proto3,oneof" json:"sn,omitempty"`
	Nd            *string                `protobuf:"bytes,64,opt,name=nd,proto3,oneof" json:"nd,omitempty"`
	Ms            *string                `protobuf:"bytes,65,opt,name=ms,proto3,oneof" json:"ms,omitempty"`
	Ta            *string                `protobuf:"bytes,66,opt,name=ta,proto3,oneof" json:"ta,omitempty"`
	To            *string                `protobuf:"bytes,67,opt,name=to,proto3,oneof" json:"to,omitempty"`
	Et            *string                `protobuf:"bytes,68,opt,name=et,proto3,oneof" json:"et,omitempty"`
	Pt            *string                `protobuf:"bytes,69,opt,name=pt,proto3,oneof" json:"pt,omitempty"`
	Fo            *string                `protobuf:"bytes,70,opt,name=fo,proto3,oneof" json:"fo,omitempty"`
	Fa            *string                `protobuf:"bytes,71,opt,name=fa,proto3,oneof" json:"fa,omitempty"`
	Fi            *string                `protobuf:"bytes,72,opt,name=fi,proto3,oneof" json:"fi,omitempty"`
	Sv            *string                `protobuf:"bytes,73,opt,name=sv,proto3,oneof" json:"sv,omitempty"`
	Ff            *string                `protobuf:"bytes,74,opt,name=ff,proto3,oneof" json:"ff,omitempty"`
	Rn            *string                `protobuf:"bytes,75,opt,name=rn,proto3,oneof" json:"rn,omitempty"`
	Ln            *string                `protobuf:"bytes,76,opt,name=ln,proto3,oneof" json:"ln,omitempty"`
	Kg            *string                `protobuf:"bytes,77,opt,name=kg,proto3,oneof" json:"kg,omitempty"`
	Lu            *string                `protobuf:"bytes,78,opt,name=lu,proto3,oneof" json:"lu,omitempty"`
	Ht            *string                `protobuf:"bytes,79,opt,name=ht,proto3,oneof" json:"ht,omitempty"`
	Mg            *string                `protobuf:"bytes,80,opt,name=mg,proto3,oneof" json:"mg,omitempty"`
	Sg            *string                `protobuf:"bytes,81,opt,name=sg,proto3,oneof" json:"sg,omitempty"`
	Gn            *string                `protobuf:"bytes,82,opt,name=gn,proto3,oneof" json:"gn,omitempty"`
	Hu            *string                `protobuf:"bytes,83,opt,name=hu,proto3,oneof" json:"hu,omitempty"`
	Id            *string                `protobuf:"bytes,84,opt,name=id,proto3,oneof" json:"id,omitempty"`
	Is            *string                `protobuf:"bytes,85,opt,name=is,proto3,oneof" json:"is,omitempty"`
	Ja            *string                `protobuf:"bytes,86,opt,name=ja,proto3,oneof" json:"ja,omitempty"`
	Kl            *string                `protobuf:"bytes,87,opt,name=kl,proto3,oneof" json:"kl,omitempty"`
	Ka            *string                `protobuf:"bytes,88,opt,name=ka,proto3,oneof" json:"ka,omitempty"`
	Kk            *string                `protobuf:"bytes,89,opt,name=kk,proto3,oneof" json:"kk,omitempty"`
	Km            *string                `protobuf:"bytes,90,opt,name=km,proto3,oneof" json:"km,omitempty"`
	Ky            *string                `protobuf:"bytes,91,opt,name=ky,proto3,oneof" json:"ky,omitempty"`
	Ko            *string                `protobuf:"bytes,92,opt,name=ko,proto3,oneof" json:"ko,omitempty"`
	Lo            *string                `protobuf:"bytes,93,opt,name=lo,proto3,oneof" json:"lo,omitempty"`
	Lv            *string                `protobuf:"bytes,94,opt,name=lv,proto3,oneof" json:"lv,omitempty"`
	Lt            *string                `protobuf:"bytes,95,opt,name=lt,proto3,oneof" json:"lt,omitempty"`
	Mk            *string                `protobuf:"bytes,96,opt,name=mk,proto3,oneof" json:"mk,omitempty"`
	Mn            *string                `protobuf:"bytes,97,opt,name=mn,proto3,oneof" json:"mn,omitempty"`
	My            *string                `protobuf:"bytes,98,opt,name=my,proto3,oneof" json:"my,omitempty"`
	Ne            *string                `protobuf:"bytes,99,opt,name=ne,proto3,oneof" json:"ne,omitempty"`
	Nn            *string                `protobuf:"bytes,100,opt,name=nn,proto3,oneof" json:"nn,omitempty"`
	No            *string                `protobuf:"bytes,101,opt,name=no,proto3,oneof" json:"no,omitempty"`
	Nb            *string                `protobuf:"bytes,102,opt,name=nb,proto3,oneof" json:"nb,omitempty"`
	Pl            *string                `protobuf:"bytes,103,opt,name=pl,proto3,oneof" json:"pl,omitempty"`
	Ps            *string                `protobuf:"bytes,104,opt,name=ps,proto3,oneof" json:"ps,omitempty"`
	Uz            *string                `protobuf:"bytes,105,opt,name=uz,proto3,oneof" json:"uz,omitempty"`
	Tk            *string                `protobuf:"bytes,106,opt,name=tk,proto3,oneof" json:"tk,omitempty"`
	Ro            *string                `protobuf:"bytes,107,opt,name=ro,proto3,oneof" json:"ro,omitempty"`
	Tg            *string                `protobuf:"bytes,108,opt,name=tg,proto3,oneof" json:"tg,omitempty"`
	Si            *string                `protobuf:"bytes,109,opt,name=si,proto3,oneof" json:"si,omitempty"`
	Sl            *string                `protobuf:"bytes,110,opt,name=sl,proto3,oneof" json:"sl,omitempty"`
	Th            *string                `protobuf:"bytes,111,opt,name=th,proto3,oneof" json:"th,omitempty"`
	Uk            *string                `protobuf:"bytes,112,opt,name=uk,proto3,oneof" json:"uk,omitempty"`
	Vi            *string                `protobuf:"bytes,113,opt,name=vi,proto3,oneof" json:"vi,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Translation) Reset() {
	*x = Translation{}
	mi := &file_api_common_translation_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Translation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Translation) ProtoMessage() {}

func (x *Translation) ProtoReflect() protoreflect.Message {
	mi := &file_api_common_translation_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Translation.ProtoReflect.Descriptor instead.
func (*Translation) Descriptor() ([]byte, []int) {
	return file_api_common_translation_proto_rawDescGZIP(), []int{0}
}

func (x *Translation) GetAa() string {
	if x != nil && x.Aa != nil {
		return *x.Aa
	}
	return ""
}

func (x *Translation) GetTi() string {
	if x != nil && x.Ti != nil {
		return *x.Ti
	}
	return ""
}

func (x *Translation) GetAr() string {
	if x != nil && x.Ar != nil {
		return *x.Ar
	}
	return ""
}

func (x *Translation) GetEn() string {
	if x != nil && x.En != nil {
		return *x.En
	}
	return ""
}

func (x *Translation) GetAf() string {
	if x != nil && x.Af != nil {
		return *x.Af
	}
	return ""
}

func (x *Translation) GetNr() string {
	if x != nil && x.Nr != nil {
		return *x.Nr
	}
	return ""
}

func (x *Translation) GetSt() string {
	if x != nil && x.St != nil {
		return *x.St
	}
	return ""
}

func (x *Translation) GetSs() string {
	if x != nil && x.Ss != nil {
		return *x.Ss
	}
	return ""
}

func (x *Translation) GetTn() string {
	if x != nil && x.Tn != nil {
		return *x.Tn
	}
	return ""
}

func (x *Translation) GetTs() string {
	if x != nil && x.Ts != nil {
		return *x.Ts
	}
	return ""
}

func (x *Translation) GetVe() string {
	if x != nil && x.Ve != nil {
		return *x.Ve
	}
	return ""
}

func (x *Translation) GetXh() string {
	if x != nil && x.Xh != nil {
		return *x.Xh
	}
	return ""
}

func (x *Translation) GetZu() string {
	if x != nil && x.Zu != nil {
		return *x.Zu
	}
	return ""
}

func (x *Translation) GetAm() string {
	if x != nil && x.Am != nil {
		return *x.Am
	}
	return ""
}

func (x *Translation) GetFr() string {
	if x != nil && x.Fr != nil {
		return *x.Fr
	}
	return ""
}

func (x *Translation) GetKu() string {
	if x != nil && x.Ku != nil {
		return *x.Ku
	}
	return ""
}

func (x *Translation) GetHe() string {
	if x != nil && x.He != nil {
		return *x.He
	}
	return ""
}

func (x *Translation) GetSo() string {
	if x != nil && x.So != nil {
		return *x.So
	}
	return ""
}

func (x *Translation) GetAy() string {
	if x != nil && x.Ay != nil {
		return *x.Ay
	}
	return ""
}

func (x *Translation) GetEs() string {
	if x != nil && x.Es != nil {
		return *x.Es
	}
	return ""
}

func (x *Translation) GetQu() string {
	if x != nil && x.Qu != nil {
		return *x.Qu
	}
	return ""
}

func (x *Translation) GetAz() string {
	if x != nil && x.Az != nil {
		return *x.Az
	}
	return ""
}

func (x *Translation) GetBe() string {
	if x != nil && x.Be != nil {
		return *x.Be
	}
	return ""
}

func (x *Translation) GetRu() string {
	if x != nil && x.Ru != nil {
		return *x.Ru
	}
	return ""
}

func (x *Translation) GetBn() string {
	if x != nil && x.Bn != nil {
		return *x.Bn
	}
	return ""
}

func (x *Translation) GetBi() string {
	if x != nil && x.Bi != nil {
		return *x.Bi
	}
	return ""
}

func (x *Translation) GetBs() string {
	if x != nil && x.Bs != nil {
		return *x.Bs
	}
	return ""
}

func (x *Translation) GetHr() string {
	if x != nil && x.Hr != nil {
		return *x.Hr
	}
	return ""
}

func (x *Translation) GetSr() string {
	if x != nil && x.Sr != nil {
		return *x.Sr
	}
	return ""
}

func (x *Translation) GetSq() string {
	if x != nil && x.Sq != nil {
		return *x.Sq
	}
	return ""
}

func (x *Translation) GetBg() string {
	if x != nil && x.Bg != nil {
		return *x.Bg
	}
	return ""
}

func (x *Translation) GetCa() string {
	if x != nil && x.Ca != nil {
		return *x.Ca
	}
	return ""
}

func (x *Translation) GetCs() string {
	if x != nil && x.Cs != nil {
		return *x.Cs
	}
	return ""
}

func (x *Translation) GetSk() string {
	if x != nil && x.Sk != nil {
		return *x.Sk
	}
	return ""
}

func (x *Translation) GetCh() string {
	if x != nil && x.Ch != nil {
		return *x.Ch
	}
	return ""
}

func (x *Translation) GetDa() string {
	if x != nil && x.Da != nil {
		return *x.Da
	}
	return ""
}

func (x *Translation) GetDe() string {
	if x != nil && x.De != nil {
		return *x.De
	}
	return ""
}

func (x *Translation) GetNl() string {
	if x != nil && x.Nl != nil {
		return *x.Nl
	}
	return ""
}

func (x *Translation) GetLb() string {
	if x != nil && x.Lb != nil {
		return *x.Lb
	}
	return ""
}

func (x *Translation) GetIt() string {
	if x != nil && x.It != nil {
		return *x.It
	}
	return ""
}

func (x *Translation) GetRm() string {
	if x != nil && x.Rm != nil {
		return *x.Rm
	}
	return ""
}

func (x *Translation) GetLa() string {
	if x != nil && x.La != nil {
		return *x.La
	}
	return ""
}

func (x *Translation) GetDv() string {
	if x != nil && x.Dv != nil {
		return *x.Dv
	}
	return ""
}

func (x *Translation) GetDz() string {
	if x != nil && x.Dz != nil {
		return *x.Dz
	}
	return ""
}

func (x *Translation) GetEl() string {
	if x != nil && x.El != nil {
		return *x.El
	}
	return ""
}

func (x *Translation) GetTr() string {
	if x != nil && x.Tr != nil {
		return *x.Tr
	}
	return ""
}

func (x *Translation) GetHy() string {
	if x != nil && x.Hy != nil {
		return *x.Hy
	}
	return ""
}

func (x *Translation) GetSm() string {
	if x != nil && x.Sm != nil {
		return *x.Sm
	}
	return ""
}

func (x *Translation) GetPa() string {
	if x != nil && x.Pa != nil {
		return *x.Pa
	}
	return ""
}

func (x *Translation) GetFj() string {
	if x != nil && x.Fj != nil {
		return *x.Fj
	}
	return ""
}

func (x *Translation) GetZh() string {
	if x != nil && x.Zh != nil {
		return *x.Zh
	}
	return ""
}

func (x *Translation) GetHi() string {
	if x != nil && x.Hi != nil {
		return *x.Hi
	}
	return ""
}

func (x *Translation) GetGv() string {
	if x != nil && x.Gv != nil {
		return *x.Gv
	}
	return ""
}

func (x *Translation) GetGa() string {
	if x != nil && x.Ga != nil {
		return *x.Ga
	}
	return ""
}

func (x *Translation) GetSw() string {
	if x != nil && x.Sw != nil {
		return *x.Sw
	}
	return ""
}

func (x *Translation) GetNy() string {
	if x != nil && x.Ny != nil {
		return *x.Ny
	}
	return ""
}

func (x *Translation) GetMt() string {
	if x != nil && x.Mt != nil {
		return *x.Mt
	}
	return ""
}

func (x *Translation) GetMh() string {
	if x != nil && x.Mh != nil {
		return *x.Mh
	}
	return ""
}

func (x *Translation) GetNa() string {
	if x != nil && x.Na != nil {
		return *x.Na
	}
	return ""
}

func (x *Translation) GetMi() string {
	if x != nil && x.Mi != nil {
		return *x.Mi
	}
	return ""
}

func (x *Translation) GetUr() string {
	if x != nil && x.Ur != nil {
		return *x.Ur
	}
	return ""
}

func (x *Translation) GetRw() string {
	if x != nil && x.Rw != nil {
		return *x.Rw
	}
	return ""
}

func (x *Translation) GetSn() string {
	if x != nil && x.Sn != nil {
		return *x.Sn
	}
	return ""
}

func (x *Translation) GetNd() string {
	if x != nil && x.Nd != nil {
		return *x.Nd
	}
	return ""
}

func (x *Translation) GetMs() string {
	if x != nil && x.Ms != nil {
		return *x.Ms
	}
	return ""
}

func (x *Translation) GetTa() string {
	if x != nil && x.Ta != nil {
		return *x.Ta
	}
	return ""
}

func (x *Translation) GetTo() string {
	if x != nil && x.To != nil {
		return *x.To
	}
	return ""
}

func (x *Translation) GetEt() string {
	if x != nil && x.Et != nil {
		return *x.Et
	}
	return ""
}

func (x *Translation) GetPt() string {
	if x != nil && x.Pt != nil {
		return *x.Pt
	}
	return ""
}

func (x *Translation) GetFo() string {
	if x != nil && x.Fo != nil {
		return *x.Fo
	}
	return ""
}

func (x *Translation) GetFa() string {
	if x != nil && x.Fa != nil {
		return *x.Fa
	}
	return ""
}

func (x *Translation) GetFi() string {
	if x != nil && x.Fi != nil {
		return *x.Fi
	}
	return ""
}

func (x *Translation) GetSv() string {
	if x != nil && x.Sv != nil {
		return *x.Sv
	}
	return ""
}

func (x *Translation) GetFf() string {
	if x != nil && x.Ff != nil {
		return *x.Ff
	}
	return ""
}

func (x *Translation) GetRn() string {
	if x != nil && x.Rn != nil {
		return *x.Rn
	}
	return ""
}

func (x *Translation) GetLn() string {
	if x != nil && x.Ln != nil {
		return *x.Ln
	}
	return ""
}

func (x *Translation) GetKg() string {
	if x != nil && x.Kg != nil {
		return *x.Kg
	}
	return ""
}

func (x *Translation) GetLu() string {
	if x != nil && x.Lu != nil {
		return *x.Lu
	}
	return ""
}

func (x *Translation) GetHt() string {
	if x != nil && x.Ht != nil {
		return *x.Ht
	}
	return ""
}

func (x *Translation) GetMg() string {
	if x != nil && x.Mg != nil {
		return *x.Mg
	}
	return ""
}

func (x *Translation) GetSg() string {
	if x != nil && x.Sg != nil {
		return *x.Sg
	}
	return ""
}

func (x *Translation) GetGn() string {
	if x != nil && x.Gn != nil {
		return *x.Gn
	}
	return ""
}

func (x *Translation) GetHu() string {
	if x != nil && x.Hu != nil {
		return *x.Hu
	}
	return ""
}

func (x *Translation) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Translation) GetIs() string {
	if x != nil && x.Is != nil {
		return *x.Is
	}
	return ""
}

func (x *Translation) GetJa() string {
	if x != nil && x.Ja != nil {
		return *x.Ja
	}
	return ""
}

func (x *Translation) GetKl() string {
	if x != nil && x.Kl != nil {
		return *x.Kl
	}
	return ""
}

func (x *Translation) GetKa() string {
	if x != nil && x.Ka != nil {
		return *x.Ka
	}
	return ""
}

func (x *Translation) GetKk() string {
	if x != nil && x.Kk != nil {
		return *x.Kk
	}
	return ""
}

func (x *Translation) GetKm() string {
	if x != nil && x.Km != nil {
		return *x.Km
	}
	return ""
}

func (x *Translation) GetKy() string {
	if x != nil && x.Ky != nil {
		return *x.Ky
	}
	return ""
}

func (x *Translation) GetKo() string {
	if x != nil && x.Ko != nil {
		return *x.Ko
	}
	return ""
}

func (x *Translation) GetLo() string {
	if x != nil && x.Lo != nil {
		return *x.Lo
	}
	return ""
}

func (x *Translation) GetLv() string {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return ""
}

func (x *Translation) GetLt() string {
	if x != nil && x.Lt != nil {
		return *x.Lt
	}
	return ""
}

func (x *Translation) GetMk() string {
	if x != nil && x.Mk != nil {
		return *x.Mk
	}
	return ""
}

func (x *Translation) GetMn() string {
	if x != nil && x.Mn != nil {
		return *x.Mn
	}
	return ""
}

func (x *Translation) GetMy() string {
	if x != nil && x.My != nil {
		return *x.My
	}
	return ""
}

func (x *Translation) GetNe() string {
	if x != nil && x.Ne != nil {
		return *x.Ne
	}
	return ""
}

func (x *Translation) GetNn() string {
	if x != nil && x.Nn != nil {
		return *x.Nn
	}
	return ""
}

func (x *Translation) GetNo() string {
	if x != nil && x.No != nil {
		return *x.No
	}
	return ""
}

func (x *Translation) GetNb() string {
	if x != nil && x.Nb != nil {
		return *x.Nb
	}
	return ""
}

func (x *Translation) GetPl() string {
	if x != nil && x.Pl != nil {
		return *x.Pl
	}
	return ""
}

func (x *Translation) GetPs() string {
	if x != nil && x.Ps != nil {
		return *x.Ps
	}
	return ""
}

func (x *Translation) GetUz() string {
	if x != nil && x.Uz != nil {
		return *x.Uz
	}
	return ""
}

func (x *Translation) GetTk() string {
	if x != nil && x.Tk != nil {
		return *x.Tk
	}
	return ""
}

func (x *Translation) GetRo() string {
	if x != nil && x.Ro != nil {
		return *x.Ro
	}
	return ""
}

func (x *Translation) GetTg() string {
	if x != nil && x.Tg != nil {
		return *x.Tg
	}
	return ""
}

func (x *Translation) GetSi() string {
	if x != nil && x.Si != nil {
		return *x.Si
	}
	return ""
}

func (x *Translation) GetSl() string {
	if x != nil && x.Sl != nil {
		return *x.Sl
	}
	return ""
}

func (x *Translation) GetTh() string {
	if x != nil && x.Th != nil {
		return *x.Th
	}
	return ""
}

func (x *Translation) GetUk() string {
	if x != nil && x.Uk != nil {
		return *x.Uk
	}
	return ""
}

func (x *Translation) GetVi() string {
	if x != nil && x.Vi != nil {
		return *x.Vi
	}
	return ""
}

var File_api_common_translation_proto protoreflect.FileDescriptor

const file_api_common_translation_proto_rawDesc = "" +
	"\n" +
	"\x1capi/common/translation.proto\x12\x0ellunk.protobuf\"\xe9\x18\n" +
	"\vTranslation\x12\x13\n" +
	"\x02aa\x18\x01 \x01(\tH\x00R\x02aa\x88\x01\x01\x12\x13\n" +
	"\x02ti\x18\x02 \x01(\tH\x01R\x02ti\x88\x01\x01\x12\x13\n" +
	"\x02ar\x18\x03 \x01(\tH\x02R\x02ar\x88\x01\x01\x12\x13\n" +
	"\x02en\x18\x04 \x01(\tH\x03R\x02en\x88\x01\x01\x12\x13\n" +
	"\x02af\x18\x05 \x01(\tH\x04R\x02af\x88\x01\x01\x12\x13\n" +
	"\x02nr\x18\x06 \x01(\tH\x05R\x02nr\x88\x01\x01\x12\x13\n" +
	"\x02st\x18\a \x01(\tH\x06R\x02st\x88\x01\x01\x12\x13\n" +
	"\x02ss\x18\b \x01(\tH\aR\x02ss\x88\x01\x01\x12\x13\n" +
	"\x02tn\x18\t \x01(\tH\bR\x02tn\x88\x01\x01\x12\x13\n" +
	"\x02ts\x18\n" +
	" \x01(\tH\tR\x02ts\x88\x01\x01\x12\x13\n" +
	"\x02ve\x18\v \x01(\tH\n" +
	"R\x02ve\x88\x01\x01\x12\x13\n" +
	"\x02xh\x18\f \x01(\tH\vR\x02xh\x88\x01\x01\x12\x13\n" +
	"\x02zu\x18\r \x01(\tH\fR\x02zu\x88\x01\x01\x12\x13\n" +
	"\x02am\x18\x0e \x01(\tH\rR\x02am\x88\x01\x01\x12\x13\n" +
	"\x02fr\x18\x0f \x01(\tH\x0eR\x02fr\x88\x01\x01\x12\x13\n" +
	"\x02ku\x18\x10 \x01(\tH\x0fR\x02ku\x88\x01\x01\x12\x13\n" +
	"\x02he\x18\x11 \x01(\tH\x10R\x02he\x88\x01\x01\x12\x13\n" +
	"\x02so\x18\x12 \x01(\tH\x11R\x02so\x88\x01\x01\x12\x13\n" +
	"\x02ay\x18\x13 \x01(\tH\x12R\x02ay\x88\x01\x01\x12\x13\n" +
	"\x02es\x18\x14 \x01(\tH\x13R\x02es\x88\x01\x01\x12\x13\n" +
	"\x02qu\x18\x15 \x01(\tH\x14R\x02qu\x88\x01\x01\x12\x13\n" +
	"\x02az\x18\x16 \x01(\tH\x15R\x02az\x88\x01\x01\x12\x13\n" +
	"\x02be\x18\x17 \x01(\tH\x16R\x02be\x88\x01\x01\x12\x13\n" +
	"\x02ru\x18\x18 \x01(\tH\x17R\x02ru\x88\x01\x01\x12\x13\n" +
	"\x02bn\x18\x19 \x01(\tH\x18R\x02bn\x88\x01\x01\x12\x13\n" +
	"\x02bi\x18\x1a \x01(\tH\x19R\x02bi\x88\x01\x01\x12\x13\n" +
	"\x02bs\x18\x1b \x01(\tH\x1aR\x02bs\x88\x01\x01\x12\x13\n" +
	"\x02hr\x18\x1c \x01(\tH\x1bR\x02hr\x88\x01\x01\x12\x13\n" +
	"\x02sr\x18\x1d \x01(\tH\x1cR\x02sr\x88\x01\x01\x12\x13\n" +
	"\x02sq\x18\x1e \x01(\tH\x1dR\x02sq\x88\x01\x01\x12\x13\n" +
	"\x02bg\x18\x1f \x01(\tH\x1eR\x02bg\x88\x01\x01\x12\x13\n" +
	"\x02ca\x18  \x01(\tH\x1fR\x02ca\x88\x01\x01\x12\x13\n" +
	"\x02cs\x18! \x01(\tH R\x02cs\x88\x01\x01\x12\x13\n" +
	"\x02sk\x18\" \x01(\tH!R\x02sk\x88\x01\x01\x12\x13\n" +
	"\x02ch\x18# \x01(\tH\"R\x02ch\x88\x01\x01\x12\x13\n" +
	"\x02da\x18$ \x01(\tH#R\x02da\x88\x01\x01\x12\x13\n" +
	"\x02de\x18% \x01(\tH$R\x02de\x88\x01\x01\x12\x13\n" +
	"\x02nl\x18& \x01(\tH%R\x02nl\x88\x01\x01\x12\x13\n" +
	"\x02lb\x18' \x01(\tH&R\x02lb\x88\x01\x01\x12\x13\n" +
	"\x02it\x18( \x01(\tH'R\x02it\x88\x01\x01\x12\x13\n" +
	"\x02rm\x18) \x01(\tH(R\x02rm\x88\x01\x01\x12\x13\n" +
	"\x02la\x18* \x01(\tH)R\x02la\x88\x01\x01\x12\x13\n" +
	"\x02dv\x18+ \x01(\tH*R\x02dv\x88\x01\x01\x12\x13\n" +
	"\x02dz\x18, \x01(\tH+R\x02dz\x88\x01\x01\x12\x13\n" +
	"\x02el\x18- \x01(\tH,R\x02el\x88\x01\x01\x12\x13\n" +
	"\x02tr\x18. \x01(\tH-R\x02tr\x88\x01\x01\x12\x13\n" +
	"\x02hy\x18/ \x01(\tH.R\x02hy\x88\x01\x01\x12\x13\n" +
	"\x02sm\x180 \x01(\tH/R\x02sm\x88\x01\x01\x12\x13\n" +
	"\x02pa\x181 \x01(\tH0R\x02pa\x88\x01\x01\x12\x13\n" +
	"\x02fj\x182 \x01(\tH1R\x02fj\x88\x01\x01\x12\x13\n" +
	"\x02zh\x183 \x01(\tH2R\x02zh\x88\x01\x01\x12\x13\n" +
	"\x02hi\x184 \x01(\tH3R\x02hi\x88\x01\x01\x12\x13\n" +
	"\x02gv\x185 \x01(\tH4R\x02gv\x88\x01\x01\x12\x13\n" +
	"\x02ga\x186 \x01(\tH5R\x02ga\x88\x01\x01\x12\x13\n" +
	"\x02sw\x187 \x01(\tH6R\x02sw\x88\x01\x01\x12\x13\n" +
	"\x02ny\x188 \x01(\tH7R\x02ny\x88\x01\x01\x12\x13\n" +
	"\x02mt\x189 \x01(\tH8R\x02mt\x88\x01\x01\x12\x13\n" +
	"\x02mh\x18: \x01(\tH9R\x02mh\x88\x01\x01\x12\x13\n" +
	"\x02na\x18; \x01(\tH:R\x02na\x88\x01\x01\x12\x13\n" +
	"\x02mi\x18< \x01(\tH;R\x02mi\x88\x01\x01\x12\x13\n" +
	"\x02ur\x18= \x01(\tH<R\x02ur\x88\x01\x01\x12\x13\n" +
	"\x02rw\x18> \x01(\tH=R\x02rw\x88\x01\x01\x12\x13\n" +
	"\x02sn\x18? \x01(\tH>R\x02sn\x88\x01\x01\x12\x13\n" +
	"\x02nd\x18@ \x01(\tH?R\x02nd\x88\x01\x01\x12\x13\n" +
	"\x02ms\x18A \x01(\tH@R\x02ms\x88\x01\x01\x12\x13\n" +
	"\x02ta\x18B \x01(\tHAR\x02ta\x88\x01\x01\x12\x13\n" +
	"\x02to\x18C \x01(\tHBR\x02to\x88\x01\x01\x12\x13\n" +
	"\x02et\x18D \x01(\tHCR\x02et\x88\x01\x01\x12\x13\n" +
	"\x02pt\x18E \x01(\tHDR\x02pt\x88\x01\x01\x12\x13\n" +
	"\x02fo\x18F \x01(\tHER\x02fo\x88\x01\x01\x12\x13\n" +
	"\x02fa\x18G \x01(\tHFR\x02fa\x88\x01\x01\x12\x13\n" +
	"\x02fi\x18H \x01(\tHGR\x02fi\x88\x01\x01\x12\x13\n" +
	"\x02sv\x18I \x01(\tHHR\x02sv\x88\x01\x01\x12\x13\n" +
	"\x02ff\x18J \x01(\tHIR\x02ff\x88\x01\x01\x12\x13\n" +
	"\x02rn\x18K \x01(\tHJR\x02rn\x88\x01\x01\x12\x13\n" +
	"\x02ln\x18L \x01(\tHKR\x02ln\x88\x01\x01\x12\x13\n" +
	"\x02kg\x18M \x01(\tHLR\x02kg\x88\x01\x01\x12\x13\n" +
	"\x02lu\x18N \x01(\tHMR\x02lu\x88\x01\x01\x12\x13\n" +
	"\x02ht\x18O \x01(\tHNR\x02ht\x88\x01\x01\x12\x13\n" +
	"\x02mg\x18P \x01(\tHOR\x02mg\x88\x01\x01\x12\x13\n" +
	"\x02sg\x18Q \x01(\tHPR\x02sg\x88\x01\x01\x12\x13\n" +
	"\x02gn\x18R \x01(\tHQR\x02gn\x88\x01\x01\x12\x13\n" +
	"\x02hu\x18S \x01(\tHRR\x02hu\x88\x01\x01\x12\x13\n" +
	"\x02id\x18T \x01(\tHSR\x02id\x88\x01\x01\x12\x13\n" +
	"\x02is\x18U \x01(\tHTR\x02is\x88\x01\x01\x12\x13\n" +
	"\x02ja\x18V \x01(\tHUR\x02ja\x88\x01\x01\x12\x13\n" +
	"\x02kl\x18W \x01(\tHVR\x02kl\x88\x01\x01\x12\x13\n" +
	"\x02ka\x18X \x01(\tHWR\x02ka\x88\x01\x01\x12\x13\n" +
	"\x02kk\x18Y \x01(\tHXR\x02kk\x88\x01\x01\x12\x13\n" +
	"\x02km\x18Z \x01(\tHYR\x02km\x88\x01\x01\x12\x13\n" +
	"\x02ky\x18[ \x01(\tHZR\x02ky\x88\x01\x01\x12\x13\n" +
	"\x02ko\x18\\ \x01(\tH[R\x02ko\x88\x01\x01\x12\x13\n" +
	"\x02lo\x18] \x01(\tH\\R\x02lo\x88\x01\x01\x12\x13\n" +
	"\x02lv\x18^ \x01(\tH]R\x02lv\x88\x01\x01\x12\x13\n" +
	"\x02lt\x18_ \x01(\tH^R\x02lt\x88\x01\x01\x12\x13\n" +
	"\x02mk\x18` \x01(\tH_R\x02mk\x88\x01\x01\x12\x13\n" +
	"\x02mn\x18a \x01(\tH`R\x02mn\x88\x01\x01\x12\x13\n" +
	"\x02my\x18b \x01(\tHaR\x02my\x88\x01\x01\x12\x13\n" +
	"\x02ne\x18c \x01(\tHbR\x02ne\x88\x01\x01\x12\x13\n" +
	"\x02nn\x18d \x01(\tHcR\x02nn\x88\x01\x01\x12\x13\n" +
	"\x02no\x18e \x01(\tHdR\x02no\x88\x01\x01\x12\x13\n" +
	"\x02nb\x18f \x01(\tHeR\x02nb\x88\x01\x01\x12\x13\n" +
	"\x02pl\x18g \x01(\tHfR\x02pl\x88\x01\x01\x12\x13\n" +
	"\x02ps\x18h \x01(\tHgR\x02ps\x88\x01\x01\x12\x13\n" +
	"\x02uz\x18i \x01(\tHhR\x02uz\x88\x01\x01\x12\x13\n" +
	"\x02tk\x18j \x01(\tHiR\x02tk\x88\x01\x01\x12\x13\n" +
	"\x02ro\x18k \x01(\tHjR\x02ro\x88\x01\x01\x12\x13\n" +
	"\x02tg\x18l \x01(\tHkR\x02tg\x88\x01\x01\x12\x13\n" +
	"\x02si\x18m \x01(\tHlR\x02si\x88\x01\x01\x12\x13\n" +
	"\x02sl\x18n \x01(\tHmR\x02sl\x88\x01\x01\x12\x13\n" +
	"\x02th\x18o \x01(\tHnR\x02th\x88\x01\x01\x12\x13\n" +
	"\x02uk\x18p \x01(\tHoR\x02uk\x88\x01\x01\x12\x13\n" +
	"\x02vi\x18q \x01(\tHpR\x02vi\x88\x01\x01B\x05\n" +
	"\x03_aaB\x05\n" +
	"\x03_tiB\x05\n" +
	"\x03_arB\x05\n" +
	"\x03_enB\x05\n" +
	"\x03_afB\x05\n" +
	"\x03_nrB\x05\n" +
	"\x03_stB\x05\n" +
	"\x03_ssB\x05\n" +
	"\x03_tnB\x05\n" +
	"\x03_tsB\x05\n" +
	"\x03_veB\x05\n" +
	"\x03_xhB\x05\n" +
	"\x03_zuB\x05\n" +
	"\x03_amB\x05\n" +
	"\x03_frB\x05\n" +
	"\x03_kuB\x05\n" +
	"\x03_heB\x05\n" +
	"\x03_soB\x05\n" +
	"\x03_ayB\x05\n" +
	"\x03_esB\x05\n" +
	"\x03_quB\x05\n" +
	"\x03_azB\x05\n" +
	"\x03_beB\x05\n" +
	"\x03_ruB\x05\n" +
	"\x03_bnB\x05\n" +
	"\x03_biB\x05\n" +
	"\x03_bsB\x05\n" +
	"\x03_hrB\x05\n" +
	"\x03_srB\x05\n" +
	"\x03_sqB\x05\n" +
	"\x03_bgB\x05\n" +
	"\x03_caB\x05\n" +
	"\x03_csB\x05\n" +
	"\x03_skB\x05\n" +
	"\x03_chB\x05\n" +
	"\x03_daB\x05\n" +
	"\x03_deB\x05\n" +
	"\x03_nlB\x05\n" +
	"\x03_lbB\x05\n" +
	"\x03_itB\x05\n" +
	"\x03_rmB\x05\n" +
	"\x03_laB\x05\n" +
	"\x03_dvB\x05\n" +
	"\x03_dzB\x05\n" +
	"\x03_elB\x05\n" +
	"\x03_trB\x05\n" +
	"\x03_hyB\x05\n" +
	"\x03_smB\x05\n" +
	"\x03_paB\x05\n" +
	"\x03_fjB\x05\n" +
	"\x03_zhB\x05\n" +
	"\x03_hiB\x05\n" +
	"\x03_gvB\x05\n" +
	"\x03_gaB\x05\n" +
	"\x03_swB\x05\n" +
	"\x03_nyB\x05\n" +
	"\x03_mtB\x05\n" +
	"\x03_mhB\x05\n" +
	"\x03_naB\x05\n" +
	"\x03_miB\x05\n" +
	"\x03_urB\x05\n" +
	"\x03_rwB\x05\n" +
	"\x03_snB\x05\n" +
	"\x03_ndB\x05\n" +
	"\x03_msB\x05\n" +
	"\x03_taB\x05\n" +
	"\x03_toB\x05\n" +
	"\x03_etB\x05\n" +
	"\x03_ptB\x05\n" +
	"\x03_foB\x05\n" +
	"\x03_faB\x05\n" +
	"\x03_fiB\x05\n" +
	"\x03_svB\x05\n" +
	"\x03_ffB\x05\n" +
	"\x03_rnB\x05\n" +
	"\x03_lnB\x05\n" +
	"\x03_kgB\x05\n" +
	"\x03_luB\x05\n" +
	"\x03_htB\x05\n" +
	"\x03_mgB\x05\n" +
	"\x03_sgB\x05\n" +
	"\x03_gnB\x05\n" +
	"\x03_huB\x05\n" +
	"\x03_idB\x05\n" +
	"\x03_isB\x05\n" +
	"\x03_jaB\x05\n" +
	"\x03_klB\x05\n" +
	"\x03_kaB\x05\n" +
	"\x03_kkB\x05\n" +
	"\x03_kmB\x05\n" +
	"\x03_kyB\x05\n" +
	"\x03_koB\x05\n" +
	"\x03_loB\x05\n" +
	"\x03_lvB\x05\n" +
	"\x03_ltB\x05\n" +
	"\x03_mkB\x05\n" +
	"\x03_mnB\x05\n" +
	"\x03_myB\x05\n" +
	"\x03_neB\x05\n" +
	"\x03_nnB\x05\n" +
	"\x03_noB\x05\n" +
	"\x03_nbB\x05\n" +
	"\x03_plB\x05\n" +
	"\x03_psB\x05\n" +
	"\x03_uzB\x05\n" +
	"\x03_tkB\x05\n" +
	"\x03_roB\x05\n" +
	"\x03_tgB\x05\n" +
	"\x03_siB\x05\n" +
	"\x03_slB\x05\n" +
	"\x03_thB\x05\n" +
	"\x03_ukB\x05\n" +
	"\x03_viBr\n" +
	"\x12com.llunk.protobufB\x10TranslationProtoP\x01Z%github.com/llunk/protobuf/translation\xa2\x02\x03LPB\xaa\x02\x1aLLunk.Protobuf.Translationb\x06proto3"

var (
	file_api_common_translation_proto_rawDescOnce sync.Once
	file_api_common_translation_proto_rawDescData []byte
)

func file_api_common_translation_proto_rawDescGZIP() []byte {
	file_api_common_translation_proto_rawDescOnce.Do(func() {
		file_api_common_translation_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_common_translation_proto_rawDesc), len(file_api_common_translation_proto_rawDesc)))
	})
	return file_api_common_translation_proto_rawDescData
}

var file_api_common_translation_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_api_common_translation_proto_goTypes = []any{
	(*Translation)(nil), // 0: llunk.protobuf.Translation
}
var file_api_common_translation_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_api_common_translation_proto_init() }
func file_api_common_translation_proto_init() {
	if File_api_common_translation_proto != nil {
		return
	}
	file_api_common_translation_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_common_translation_proto_rawDesc), len(file_api_common_translation_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_common_translation_proto_goTypes,
		DependencyIndexes: file_api_common_translation_proto_depIdxs,
		MessageInfos:      file_api_common_translation_proto_msgTypes,
	}.Build()
	File_api_common_translation_proto = out.File
	file_api_common_translation_proto_goTypes = nil
	file_api_common_translation_proto_depIdxs = nil
}
